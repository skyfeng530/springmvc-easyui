<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dounine.mapper.system.rbac.UserMapper">

	<cache flushInterval="600000" size="1024"
		readOnly="true" />

	<resultMap type="user" id="userMap">
		<id property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="status" column="status" />
		<result property="department.departmentId" column="department_id" />
		<result property="department.departmentName" column="department_name" />
		<result property="department.status" column="department_status" />
	</resultMap>

	<resultMap type="user" id="userMapD">
		<id property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="createTime" column="createTime" />
		<result property="userPassword" column="userPassword" />
		<result property="status" column="status" />
		<result property="department.departmentId" column="department_id" />
		<result property="department.departmentName" column="department_name" />
		<result property="department.status" column="department_status" />
	</resultMap>

	<!-- 表名 -->
	<sql id="table_name">
		`dounine_admin_rbac_user`
	</sql>
	
	<sql id="order_by">
		<choose>
			<when test="sort!=null and sort!='' and order!=null and order!=''">
				<choose>
					<when test="sort=='createTimeT' or sort=='createTimeC'">
						order by me.createTime ${order}
					</when>
					<otherwise>
						order by me.${sort} ${order}
					</otherwise>
				</choose>
			</when>
			<otherwise>
				order by me.createTime desc
			</otherwise>
		</choose>
	</sql>

	<!-- 表中所有列 -->
	<sql id="Base_Column_List">
		me.userId,me.userName,me.status as status,me.createTime as
		createTime,
		r.departmentId as department_id,r.departmentName as
		department_name,r.status as department_status
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		WHERE 1=1
		<trim suffixOverrides=",">
			<if test="userName != null and userName != ''">
				AND me.userName like CONCAT('%',#{userName},'%')
			</if>
			<if test="createTime != null">
				AND me.createTime = #{createTime}
			</if>
			<if test="status != null">
				AND me.status = #{status}
			</if>
			<if test="department != null and department.departmentId!=null">
				AND me.departmentId = #{department.departmentId}
			</if>
		</trim>
	</sql>

	<select id="count" resultType="int" parameterType="user">
		SELECT
		COUNT(1) FROM
		<include refid="table_name" /> as me
		<include refid="Example_Where_Clause" />
	</select>

	<select id="select" resultMap="userMap" parameterType="user">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="table_name" />
		AS me INNER JOIN `dounine_admin_rbac_department` AS r ON
		me.departmentId =
		r.departmentId
		<include refid="Example_Where_Clause" />
		AND me.userId != 1
		<include refid="order_by"/>
		LIMIT #{offSet},#{rows}
	</select>

	<select id="export" resultType="map" parameterType="user">
		SELECT userId,userName,createTime
		FROM
		<include refid="table_name" />
		ORDER BY userId
		LIMIT #{offSet},#{rows}
	</select>

	<insert id="insert" parameterType="user" useGeneratedKeys="true"
		keyProperty="userId">
		INSERT INTO
		`dounine_admin_rbac_user`(`userName`,`userPassword`,`createTime`,`status`,`departmentId`)
		VALUES(#{userName},#{userPassword},#{createTime},#{status},#{department.departmentId})
	</insert>

	<update id="update" parameterType="user">
		UPDATE `dounine_admin_rbac_user` SET
		<trim suffixOverrides=",">
			<if test="userName != null  and userName != '' ">
				userName = #{userName},
			</if>
			<if test="userPassword != null and userPassword !=''">
				userPassword = #{userPassword},
			</if>
			<if test="createTime != null">
				createTime = #{createTime},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="department != null and department.departmentId !=null">
				departmentId = #{department.departmentId},
			</if>
		</trim>
		WHERE 1 = 1
		AND userName = #{userName}
	</update>

	<select id="find" resultMap="userMapD" parameterType="user">
		SELECT
		u.*,p.departmentId as department_id,p.departmentName as
		department_name,p.status as department_status
		FROM
		<include refid="table_name" />
		AS u
		INNER JOIN `dounine_admin_rbac_department` AS p ON u.departmentId
		=
		p.departmentId
		WHERE 1=1
		<if test=" userId!=null ">
			AND userId = #{userId}
		</if>
		<if test=" userName!=null and userName!=''">
			AND userName = #{userName}
		</if>
	</select>

	<delete id="delete" parameterType="user">
		DELETE FROM
		`dounine_admin_user`
		WHERE
		userName = #{userName}
	</delete>

	<update id="congeal" parameterType="user">
		UPDATE
		<include refid="table_name" />
		SET
		status = #{status}
		WHERE
		userName=#{userName}
	</update>

	<update id="thaw" parameterType="user">
		UPDATE
		<include refid="table_name" />
		SET
		status = #{status}
		WHERE
		userName=#{userName}
	</update>

</mapper>
